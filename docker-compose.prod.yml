services:
  django:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: bash -c 'while !</dev/tcp/postgres-db/5432; do sleep 1; done; python manage.py makemigrations --noinput; python manage.py makemigrations feedbackApp --noinput; python manage.py migrate --noinput; python manage.py collectstatic --noinput; gunicorn --bind 0.0.0.0:8000 feedback.wsgi --workers 4 --timeout 600'
    volumes:
      - django_media_prod:/home/app/media
      - django_password_prod:/home/app/passwords
    expose:
      - 8000
    environment:
      - DEBUG=0
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASS}@postgres-db:${POSTGRES_PORT}/${POSTGRES_DB}
      - DJANGO_ALLOWED_HOSTS=peer-mingle.cc.gatech.edu
      - DJANGO_CSRF=https://peer-mingle.cc.gatech.edu
      - DJANGO_MEDIA_ROOT=/home/app/media
    depends_on:
      - postgres-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`peer-mingle.cc.gatech.edu`)"
      - "traefik.http.routers.django.tls=true"
  postgres-db:
    image: postgres:16-alpine
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    expose:
      - ${POSTGRES_PORT}
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
      - POSTGRES_DB=${POSTGRES_DB}
  traefik:
    build:
      context: .
      dockerfile: Dockerfile.traefik
    ports:
      - 80:80
      - 443:443
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./certs-traefik.yml:/etc/traefik/dynamic/certs-traefik.yml"
      - "./certs/:/etc/certs/"

volumes:
  django_media_prod:
  django_password_prod:
  postgres_data_prod: